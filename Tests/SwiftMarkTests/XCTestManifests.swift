#if !canImport(ObjectiveC)
import XCTest

extension ATXHeadingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ATXHeadingTests = [
        ("testDepth", testDepth),
        ("testSuffix", testSuffix),
    ]
}

extension BlankLineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BlankLineTests = [
        ("testBlankLines", testBlankLines),
    ]
}

extension FencedCodeBlockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FencedCodeBlockTests = [
        ("testBlock", testBlock),
        ("testIndentedBlock", testIndentedBlock),
        ("testInfoString", testInfoString),
        ("testTildeFence", testTildeFence),
    ]
}

extension IndentedCodeBlockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IndentedCodeBlockTests = [
        ("testBlock", testBlock),
    ]
}

extension LinkReferenceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LinkReferenceTests = [
        ("testFullLink", testFullLink),
        ("testRelativeLink", testRelativeLink),
    ]
}

extension ThematicBreakTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ThematicBreakTests = [
        ("testAsterisk", testAsterisk),
        ("testHyphen", testHyphen),
        ("testUnderscore", testUnderscore),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ATXHeadingTests.__allTests__ATXHeadingTests),
        testCase(BlankLineTests.__allTests__BlankLineTests),
        testCase(FencedCodeBlockTests.__allTests__FencedCodeBlockTests),
        testCase(IndentedCodeBlockTests.__allTests__IndentedCodeBlockTests),
        testCase(LinkReferenceTests.__allTests__LinkReferenceTests),
        testCase(ThematicBreakTests.__allTests__ThematicBreakTests),
    ]
}
#endif
